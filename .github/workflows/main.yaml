name: Release application

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-b
  ARTIFACT_REGISTRY_LOCATION: europe-north1
  ARTIFACT_REGISTRY_REPO: honganmakirepo
  TODO_BACKEND_IMAGE_NAME: todo-backend
  TODO_BACKEND_DOCKERFILE_PATH: project-in-cloud/todo-backend/
  TODO_APP_IMAGE_NAME: todo-app
  TODO_APP_DOCKERFILE_PATH: project-in-cloud/todo-app/
  TODO_GENERATOR_IMAGE_NAME: todo-generator
  TODO_GENERATOR_DOCKERFILE_PATH: project-in-cloud/todo-generator/

jobs:
  build-publish-deploy:
    name: Build, Publish and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Kubernetes Namespace
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            echo "K8S_NAMESPACE=project" >> $GITHUB_ENV
          else
            SAFE_REF_NAME=$(echo "${{ github.ref_name }}" | tr '/' '-')
            echo "K8S_NAMESPACE=$SAFE_REF_NAME" >> $GITHUB_ENV
          fi

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: 'Use gcloud CLI'
        run: gcloud info

      - name: Configure Docker to use Artifact Registry
        run: gcloud auth configure-docker ${{ env.ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev

      - name: Build and Publish todo-backend Docker Image
        run: |
          TODO_BACKEND_FULL_IMAGE_TAG=${{ env.ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.TODO_BACKEND_IMAGE_NAME }}:${{ github.sha }}
          docker build --tag $TODO_BACKEND_FULL_IMAGE_TAG ${{ env.TODO_BACKEND_DOCKERFILE_PATH }}
          docker push $TODO_BACKEND_FULL_IMAGE_TAG
          echo "TODO_BACKEND_FULL_IMAGE_TAG=$TODO_BACKEND_FULL_IMAGE_TAG" >> $GITHUB_ENV

      - name: Build and Publish todo-app Docker Image
        run: |
          TODO_APP_FULL_IMAGE_TAG=${{ env.ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.TODO_APP_IMAGE_NAME }}:${{ github.sha }}
          docker build --tag $TODO_APP_FULL_IMAGE_TAG ${{ env.TODO_APP_DOCKERFILE_PATH }}
          docker push $TODO_APP_FULL_IMAGE_TAG
          echo "TODO_APP_FULL_IMAGE_TAG=$TODO_APP_FULL_IMAGE_TAG" >> $GITHUB_ENV

      - name: Build and Publish todo-generator Docker Image
        run: |
          TODO_GENERATOR_FULL_IMAGE_TAG=${{ env.ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.TODO_GENERATOR_IMAGE_NAME }}:${{ github.sha }}
          docker build --tag $TODO_GENERATOR_FULL_IMAGE_TAG ${{ env.TODO_GENERATOR_DOCKERFILE_PATH }}
          docker push $TODO_GENERATOR_FULL_IMAGE_TAG
          echo "TODO_GENERATOR_FULL_IMAGE_TAG=$TODO_GENERATOR_FULL_IMAGE_TAG" >> $GITHUB_ENV

      - name: Get GKE credentials
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: '${{ env.GKE_CLUSTER }}'
          project_id: '${{ env.PROJECT_ID }}'
          location: '${{ env.GKE_ZONE }}'

      - name: Create Namespace if it doesn't exist
        run: kubectl create namespace ${{ env.K8S_NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -
        continue-on-error: true

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2.1.0

      - name: Update Kustomization image tags and Deploy
        working-directory: project-in-cloud/
        run: |
          # The correct way to set the namespace dynamically
          kustomize edit set namespace ${{ env.K8S_NAMESPACE }}
          kustomize edit set image ${{ env.TODO_BACKEND_IMAGE_NAME }}=${{ env.TODO_BACKEND_FULL_IMAGE_TAG }}
          kustomize edit set image ${{ env.TODO_APP_IMAGE_NAME }}=${{ env.TODO_APP_FULL_IMAGE_TAG }}
          kustomize edit set image ${{ env.TODO_GENERATOR_IMAGE_NAME }}=${{ env.TODO_GENERATOR_FULL_IMAGE_TAG }}

          # The debug step to show the output
          kustomize build .
          
          # The deployment command
          kustomize build . | kubectl apply -n ${{ env.K8S_NAMESPACE }} -f -

          echo "Sleeping for 10 seconds to allow the API server to register the new resources..."
          sleep 10s

          echo "Waiting for todo-backend deployment to roll out..."
          kubectl rollout status deployment/todo-backend-deployment -n ${{ env.K8S_NAMESPACE }} --timeout=5m
          echo "Waiting for todo-app deployment to roll out..."
          kubectl rollout status deployment/todo-app-deployment -n ${{ env.K8S_NAMESPACE }} --timeout=5m

      - name: Get service information to confirm external access
        run: kubectl get services -n ${{ env.K8S_NAMESPACE }} -o wide