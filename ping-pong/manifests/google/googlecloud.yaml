apiVersion: v1
kind: Namespace
metadata:
  name: exercises
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-credentials
  namespace: exercises
type: Opaque
data:
  POSTGRES_USER: cG9zdGdyZXM=
  POSTGRES_PASSWORD: Q2VwdGVuOTEh
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-db
  namespace: exercises
spec:
  serviceName: "postgres-db-service"
  replicas: 1
  selector:
    matchLabels:
      app: postgres-db
  template:
    metadata:
      labels:
        app: postgres-db
    spec:
      containers:
      - name: postgres
        image: postgres:16.2-alpine
        ports:
        - containerPort: 5432
          name: postgres-port
        env:
        - name: POSTGRES_DB
          value: "pingpongdb"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: POSTGRES_PASSWORD
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
          subPath: postgres
        livenessProbe:
          exec:
            command: ["pg_isready", "-U", "postgres"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command: ["pg_isready", "-U", "postgres"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
      storageClassName: standard
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-db-service
  namespace: exercises
  labels:
    app: postgres-db
spec:
  selector:
    app: postgres-db
  ports:
  - protocol: TCP
    port: 5432
    targetPort: postgres-port
  type: ClusterIP
---
# This was previously an Argo Rollout. Changing to a standard Deployment
# because Argo Rollouts is not installed on this cluster.
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: exercises
  name: ping-pong-deployment
  labels:
    app: ping-pong
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ping-pong
  template:
    metadata:
      labels:
        app: ping-pong
    spec:
      containers:
      - name: ping-pong-container
        image: honganmaki/ping-pong:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
        env:
        - name: PORT
          value: "3001"
        - name: PG_HOST
          value: "postgres-db-service"
        - name: PG_DATABASE
          value: "pingpongdb"
        - name: PG_PORT
          value: "5432"
        - name: PG_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: POSTGRES_USER
        - name: PG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: POSTGRES_PASSWORD
        startupProbe:
          exec:
            command: ["pg_isready", "-h", "postgres-db-service", "-p", "5432", "-U", "postgres", "-d", "pingpongdb"]
          initialDelaySeconds: 60
          periodSeconds: 5
          failureThreshold: 24
        readinessProbe:
          exec:
            command: ["pg_isready", "-h", "postgres-db-service", "-p", "5432", "-U", "postgres", "-d", "pingpongdb"]
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: ping-pong-service
  namespace: exercises
  labels:
    app: ping-pong
spec:
  selector:
    app: ping-pong
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3001
  type: ClusterIP